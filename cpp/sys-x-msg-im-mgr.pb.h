// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sys-x-msg-im-mgr.proto

#ifndef PROTOBUF_sys_2dx_2dmsg_2dim_2dmgr_2eproto__INCLUDED
#define PROTOBUF_sys_2dx_2dmsg_2dim_2dmgr_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_sys_2dx_2dmsg_2dim_2dmgr_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[9];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsXmsgApClientLostNoticeImpl();
void InitDefaultsXmsgApClientLostNotice();
void InitDefaultsXmsgApClientEstbNoticeImpl();
void InitDefaultsXmsgApClientEstbNotice();
void InitDefaultsXmsgImMgrRawSysNeQueryReq_ExtEntry_DoNotUseImpl();
void InitDefaultsXmsgImMgrRawSysNeQueryReq_ExtEntry_DoNotUse();
void InitDefaultsXmsgImMgrRawSysNeQueryReqImpl();
void InitDefaultsXmsgImMgrRawSysNeQueryReq();
void InitDefaultsXmsgImMgrRawSysNeQueryRsp_NeEntry_DoNotUseImpl();
void InitDefaultsXmsgImMgrRawSysNeQueryRsp_NeEntry_DoNotUse();
void InitDefaultsXmsgImMgrRawSysNeQueryRspImpl();
void InitDefaultsXmsgImMgrRawSysNeQueryRsp();
void InitDefaultsXmsgImMgrRawSysNeStatusQueryReqImpl();
void InitDefaultsXmsgImMgrRawSysNeStatusQueryReq();
void InitDefaultsXmsgImMgrRawSysNeStatusQueryRsp_NeEntry_DoNotUseImpl();
void InitDefaultsXmsgImMgrRawSysNeStatusQueryRsp_NeEntry_DoNotUse();
void InitDefaultsXmsgImMgrRawSysNeStatusQueryRspImpl();
void InitDefaultsXmsgImMgrRawSysNeStatusQueryRsp();
inline void InitDefaults() {
  InitDefaultsXmsgApClientLostNotice();
  InitDefaultsXmsgApClientEstbNotice();
  InitDefaultsXmsgImMgrRawSysNeQueryReq_ExtEntry_DoNotUse();
  InitDefaultsXmsgImMgrRawSysNeQueryReq();
  InitDefaultsXmsgImMgrRawSysNeQueryRsp_NeEntry_DoNotUse();
  InitDefaultsXmsgImMgrRawSysNeQueryRsp();
  InitDefaultsXmsgImMgrRawSysNeStatusQueryReq();
  InitDefaultsXmsgImMgrRawSysNeStatusQueryRsp_NeEntry_DoNotUse();
  InitDefaultsXmsgImMgrRawSysNeStatusQueryRsp();
}
}  // namespace protobuf_sys_2dx_2dmsg_2dim_2dmgr_2eproto
class XmsgApClientEstbNotice;
class XmsgApClientEstbNoticeDefaultTypeInternal;
extern XmsgApClientEstbNoticeDefaultTypeInternal _XmsgApClientEstbNotice_default_instance_;
class XmsgApClientLostNotice;
class XmsgApClientLostNoticeDefaultTypeInternal;
extern XmsgApClientLostNoticeDefaultTypeInternal _XmsgApClientLostNotice_default_instance_;
class XmsgImMgrRawSysNeQueryReq;
class XmsgImMgrRawSysNeQueryReqDefaultTypeInternal;
extern XmsgImMgrRawSysNeQueryReqDefaultTypeInternal _XmsgImMgrRawSysNeQueryReq_default_instance_;
class XmsgImMgrRawSysNeQueryReq_ExtEntry_DoNotUse;
class XmsgImMgrRawSysNeQueryReq_ExtEntry_DoNotUseDefaultTypeInternal;
extern XmsgImMgrRawSysNeQueryReq_ExtEntry_DoNotUseDefaultTypeInternal _XmsgImMgrRawSysNeQueryReq_ExtEntry_DoNotUse_default_instance_;
class XmsgImMgrRawSysNeQueryRsp;
class XmsgImMgrRawSysNeQueryRspDefaultTypeInternal;
extern XmsgImMgrRawSysNeQueryRspDefaultTypeInternal _XmsgImMgrRawSysNeQueryRsp_default_instance_;
class XmsgImMgrRawSysNeQueryRsp_NeEntry_DoNotUse;
class XmsgImMgrRawSysNeQueryRsp_NeEntry_DoNotUseDefaultTypeInternal;
extern XmsgImMgrRawSysNeQueryRsp_NeEntry_DoNotUseDefaultTypeInternal _XmsgImMgrRawSysNeQueryRsp_NeEntry_DoNotUse_default_instance_;
class XmsgImMgrRawSysNeStatusQueryReq;
class XmsgImMgrRawSysNeStatusQueryReqDefaultTypeInternal;
extern XmsgImMgrRawSysNeStatusQueryReqDefaultTypeInternal _XmsgImMgrRawSysNeStatusQueryReq_default_instance_;
class XmsgImMgrRawSysNeStatusQueryRsp;
class XmsgImMgrRawSysNeStatusQueryRspDefaultTypeInternal;
extern XmsgImMgrRawSysNeStatusQueryRspDefaultTypeInternal _XmsgImMgrRawSysNeStatusQueryRsp_default_instance_;
class XmsgImMgrRawSysNeStatusQueryRsp_NeEntry_DoNotUse;
class XmsgImMgrRawSysNeStatusQueryRsp_NeEntry_DoNotUseDefaultTypeInternal;
extern XmsgImMgrRawSysNeStatusQueryRsp_NeEntry_DoNotUseDefaultTypeInternal _XmsgImMgrRawSysNeStatusQueryRsp_NeEntry_DoNotUse_default_instance_;

// ===================================================================

class XmsgApClientLostNotice : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgApClientLostNotice) */ {
 public:
  XmsgApClientLostNotice();
  virtual ~XmsgApClientLostNotice();

  XmsgApClientLostNotice(const XmsgApClientLostNotice& from);

  inline XmsgApClientLostNotice& operator=(const XmsgApClientLostNotice& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgApClientLostNotice(XmsgApClientLostNotice&& from) noexcept
    : XmsgApClientLostNotice() {
    *this = ::std::move(from);
  }

  inline XmsgApClientLostNotice& operator=(XmsgApClientLostNotice&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgApClientLostNotice& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgApClientLostNotice* internal_default_instance() {
    return reinterpret_cast<const XmsgApClientLostNotice*>(
               &_XmsgApClientLostNotice_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(XmsgApClientLostNotice* other);
  friend void swap(XmsgApClientLostNotice& a, XmsgApClientLostNotice& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgApClientLostNotice* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgApClientLostNotice* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgApClientLostNotice& from);
  void MergeFrom(const XmsgApClientLostNotice& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgApClientLostNotice* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string apCgt = 1;
  void clear_apcgt();
  static const int kApCgtFieldNumber = 1;
  const ::std::string& apcgt() const;
  void set_apcgt(const ::std::string& value);
  #if LANG_CXX11
  void set_apcgt(::std::string&& value);
  #endif
  void set_apcgt(const char* value);
  void set_apcgt(const char* value, size_t size);
  ::std::string* mutable_apcgt();
  ::std::string* release_apcgt();
  void set_allocated_apcgt(::std::string* apcgt);

  // string cgt = 2;
  void clear_cgt();
  static const int kCgtFieldNumber = 2;
  const ::std::string& cgt() const;
  void set_cgt(const ::std::string& value);
  #if LANG_CXX11
  void set_cgt(::std::string&& value);
  #endif
  void set_cgt(const char* value);
  void set_cgt(const char* value, size_t size);
  ::std::string* mutable_cgt();
  ::std::string* release_cgt();
  void set_allocated_cgt(::std::string* cgt);

  // string plat = 3;
  void clear_plat();
  static const int kPlatFieldNumber = 3;
  const ::std::string& plat() const;
  void set_plat(const ::std::string& value);
  #if LANG_CXX11
  void set_plat(::std::string&& value);
  #endif
  void set_plat(const char* value);
  void set_plat(const char* value, size_t size);
  ::std::string* mutable_plat();
  ::std::string* release_plat();
  void set_allocated_plat(::std::string* plat);

  // string did = 4;
  void clear_did();
  static const int kDidFieldNumber = 4;
  const ::std::string& did() const;
  void set_did(const ::std::string& value);
  #if LANG_CXX11
  void set_did(::std::string&& value);
  #endif
  void set_did(const char* value);
  void set_did(const char* value, size_t size);
  ::std::string* mutable_did();
  ::std::string* release_did();
  void set_allocated_did(::std::string* did);

  // string ccid = 5;
  void clear_ccid();
  static const int kCcidFieldNumber = 5;
  const ::std::string& ccid() const;
  void set_ccid(const ::std::string& value);
  #if LANG_CXX11
  void set_ccid(::std::string&& value);
  #endif
  void set_ccid(const char* value);
  void set_ccid(const char* value, size_t size);
  ::std::string* mutable_ccid();
  ::std::string* release_ccid();
  void set_allocated_ccid(::std::string* ccid);

  // @@protoc_insertion_point(class_scope:XmsgApClientLostNotice)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr apcgt_;
  ::google::protobuf::internal::ArenaStringPtr cgt_;
  ::google::protobuf::internal::ArenaStringPtr plat_;
  ::google::protobuf::internal::ArenaStringPtr did_;
  ::google::protobuf::internal::ArenaStringPtr ccid_;
  mutable int _cached_size_;
  friend struct ::protobuf_sys_2dx_2dmsg_2dim_2dmgr_2eproto::TableStruct;
  friend void ::protobuf_sys_2dx_2dmsg_2dim_2dmgr_2eproto::InitDefaultsXmsgApClientLostNoticeImpl();
};
// -------------------------------------------------------------------

class XmsgApClientEstbNotice : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgApClientEstbNotice) */ {
 public:
  XmsgApClientEstbNotice();
  virtual ~XmsgApClientEstbNotice();

  XmsgApClientEstbNotice(const XmsgApClientEstbNotice& from);

  inline XmsgApClientEstbNotice& operator=(const XmsgApClientEstbNotice& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgApClientEstbNotice(XmsgApClientEstbNotice&& from) noexcept
    : XmsgApClientEstbNotice() {
    *this = ::std::move(from);
  }

  inline XmsgApClientEstbNotice& operator=(XmsgApClientEstbNotice&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgApClientEstbNotice& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgApClientEstbNotice* internal_default_instance() {
    return reinterpret_cast<const XmsgApClientEstbNotice*>(
               &_XmsgApClientEstbNotice_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(XmsgApClientEstbNotice* other);
  friend void swap(XmsgApClientEstbNotice& a, XmsgApClientEstbNotice& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgApClientEstbNotice* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgApClientEstbNotice* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgApClientEstbNotice& from);
  void MergeFrom(const XmsgApClientEstbNotice& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgApClientEstbNotice* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string apCgt = 1;
  void clear_apcgt();
  static const int kApCgtFieldNumber = 1;
  const ::std::string& apcgt() const;
  void set_apcgt(const ::std::string& value);
  #if LANG_CXX11
  void set_apcgt(::std::string&& value);
  #endif
  void set_apcgt(const char* value);
  void set_apcgt(const char* value, size_t size);
  ::std::string* mutable_apcgt();
  ::std::string* release_apcgt();
  void set_allocated_apcgt(::std::string* apcgt);

  // string cgt = 2;
  void clear_cgt();
  static const int kCgtFieldNumber = 2;
  const ::std::string& cgt() const;
  void set_cgt(const ::std::string& value);
  #if LANG_CXX11
  void set_cgt(::std::string&& value);
  #endif
  void set_cgt(const char* value);
  void set_cgt(const char* value, size_t size);
  ::std::string* mutable_cgt();
  ::std::string* release_cgt();
  void set_allocated_cgt(::std::string* cgt);

  // string plat = 3;
  void clear_plat();
  static const int kPlatFieldNumber = 3;
  const ::std::string& plat() const;
  void set_plat(const ::std::string& value);
  #if LANG_CXX11
  void set_plat(::std::string&& value);
  #endif
  void set_plat(const char* value);
  void set_plat(const char* value, size_t size);
  ::std::string* mutable_plat();
  ::std::string* release_plat();
  void set_allocated_plat(::std::string* plat);

  // string did = 4;
  void clear_did();
  static const int kDidFieldNumber = 4;
  const ::std::string& did() const;
  void set_did(const ::std::string& value);
  #if LANG_CXX11
  void set_did(::std::string&& value);
  #endif
  void set_did(const char* value);
  void set_did(const char* value, size_t size);
  ::std::string* mutable_did();
  ::std::string* release_did();
  void set_allocated_did(::std::string* did);

  // string ccid = 5;
  void clear_ccid();
  static const int kCcidFieldNumber = 5;
  const ::std::string& ccid() const;
  void set_ccid(const ::std::string& value);
  #if LANG_CXX11
  void set_ccid(::std::string&& value);
  #endif
  void set_ccid(const char* value);
  void set_ccid(const char* value, size_t size);
  ::std::string* mutable_ccid();
  ::std::string* release_ccid();
  void set_allocated_ccid(::std::string* ccid);

  // @@protoc_insertion_point(class_scope:XmsgApClientEstbNotice)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr apcgt_;
  ::google::protobuf::internal::ArenaStringPtr cgt_;
  ::google::protobuf::internal::ArenaStringPtr plat_;
  ::google::protobuf::internal::ArenaStringPtr did_;
  ::google::protobuf::internal::ArenaStringPtr ccid_;
  mutable int _cached_size_;
  friend struct ::protobuf_sys_2dx_2dmsg_2dim_2dmgr_2eproto::TableStruct;
  friend void ::protobuf_sys_2dx_2dmsg_2dim_2dmgr_2eproto::InitDefaultsXmsgApClientEstbNoticeImpl();
};
// -------------------------------------------------------------------

class XmsgImMgrRawSysNeQueryReq_ExtEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<XmsgImMgrRawSysNeQueryReq_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<XmsgImMgrRawSysNeQueryReq_ExtEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  XmsgImMgrRawSysNeQueryReq_ExtEntry_DoNotUse();
  XmsgImMgrRawSysNeQueryReq_ExtEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const XmsgImMgrRawSysNeQueryReq_ExtEntry_DoNotUse& other);
  static const XmsgImMgrRawSysNeQueryReq_ExtEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const XmsgImMgrRawSysNeQueryReq_ExtEntry_DoNotUse*>(&_XmsgImMgrRawSysNeQueryReq_ExtEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class XmsgImMgrRawSysNeQueryReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImMgrRawSysNeQueryReq) */ {
 public:
  XmsgImMgrRawSysNeQueryReq();
  virtual ~XmsgImMgrRawSysNeQueryReq();

  XmsgImMgrRawSysNeQueryReq(const XmsgImMgrRawSysNeQueryReq& from);

  inline XmsgImMgrRawSysNeQueryReq& operator=(const XmsgImMgrRawSysNeQueryReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImMgrRawSysNeQueryReq(XmsgImMgrRawSysNeQueryReq&& from) noexcept
    : XmsgImMgrRawSysNeQueryReq() {
    *this = ::std::move(from);
  }

  inline XmsgImMgrRawSysNeQueryReq& operator=(XmsgImMgrRawSysNeQueryReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImMgrRawSysNeQueryReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImMgrRawSysNeQueryReq* internal_default_instance() {
    return reinterpret_cast<const XmsgImMgrRawSysNeQueryReq*>(
               &_XmsgImMgrRawSysNeQueryReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(XmsgImMgrRawSysNeQueryReq* other);
  friend void swap(XmsgImMgrRawSysNeQueryReq& a, XmsgImMgrRawSysNeQueryReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImMgrRawSysNeQueryReq* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImMgrRawSysNeQueryReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImMgrRawSysNeQueryReq& from);
  void MergeFrom(const XmsgImMgrRawSysNeQueryReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImMgrRawSysNeQueryReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> ext = 1;
  int ext_size() const;
  void clear_ext();
  static const int kExtFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      ext() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_ext();

  // @@protoc_insertion_point(class_scope:XmsgImMgrRawSysNeQueryReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      XmsgImMgrRawSysNeQueryReq_ExtEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > ext_;
  mutable int _cached_size_;
  friend struct ::protobuf_sys_2dx_2dmsg_2dim_2dmgr_2eproto::TableStruct;
  friend void ::protobuf_sys_2dx_2dmsg_2dim_2dmgr_2eproto::InitDefaultsXmsgImMgrRawSysNeQueryReqImpl();
};
// -------------------------------------------------------------------

class XmsgImMgrRawSysNeQueryRsp_NeEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<XmsgImMgrRawSysNeQueryRsp_NeEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<XmsgImMgrRawSysNeQueryRsp_NeEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  XmsgImMgrRawSysNeQueryRsp_NeEntry_DoNotUse();
  XmsgImMgrRawSysNeQueryRsp_NeEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const XmsgImMgrRawSysNeQueryRsp_NeEntry_DoNotUse& other);
  static const XmsgImMgrRawSysNeQueryRsp_NeEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const XmsgImMgrRawSysNeQueryRsp_NeEntry_DoNotUse*>(&_XmsgImMgrRawSysNeQueryRsp_NeEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class XmsgImMgrRawSysNeQueryRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImMgrRawSysNeQueryRsp) */ {
 public:
  XmsgImMgrRawSysNeQueryRsp();
  virtual ~XmsgImMgrRawSysNeQueryRsp();

  XmsgImMgrRawSysNeQueryRsp(const XmsgImMgrRawSysNeQueryRsp& from);

  inline XmsgImMgrRawSysNeQueryRsp& operator=(const XmsgImMgrRawSysNeQueryRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImMgrRawSysNeQueryRsp(XmsgImMgrRawSysNeQueryRsp&& from) noexcept
    : XmsgImMgrRawSysNeQueryRsp() {
    *this = ::std::move(from);
  }

  inline XmsgImMgrRawSysNeQueryRsp& operator=(XmsgImMgrRawSysNeQueryRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImMgrRawSysNeQueryRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImMgrRawSysNeQueryRsp* internal_default_instance() {
    return reinterpret_cast<const XmsgImMgrRawSysNeQueryRsp*>(
               &_XmsgImMgrRawSysNeQueryRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(XmsgImMgrRawSysNeQueryRsp* other);
  friend void swap(XmsgImMgrRawSysNeQueryRsp& a, XmsgImMgrRawSysNeQueryRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImMgrRawSysNeQueryRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImMgrRawSysNeQueryRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImMgrRawSysNeQueryRsp& from);
  void MergeFrom(const XmsgImMgrRawSysNeQueryRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImMgrRawSysNeQueryRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> ne = 1;
  int ne_size() const;
  void clear_ne();
  static const int kNeFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      ne() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_ne();

  // @@protoc_insertion_point(class_scope:XmsgImMgrRawSysNeQueryRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      XmsgImMgrRawSysNeQueryRsp_NeEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > ne_;
  mutable int _cached_size_;
  friend struct ::protobuf_sys_2dx_2dmsg_2dim_2dmgr_2eproto::TableStruct;
  friend void ::protobuf_sys_2dx_2dmsg_2dim_2dmgr_2eproto::InitDefaultsXmsgImMgrRawSysNeQueryRspImpl();
};
// -------------------------------------------------------------------

class XmsgImMgrRawSysNeStatusQueryReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImMgrRawSysNeStatusQueryReq) */ {
 public:
  XmsgImMgrRawSysNeStatusQueryReq();
  virtual ~XmsgImMgrRawSysNeStatusQueryReq();

  XmsgImMgrRawSysNeStatusQueryReq(const XmsgImMgrRawSysNeStatusQueryReq& from);

  inline XmsgImMgrRawSysNeStatusQueryReq& operator=(const XmsgImMgrRawSysNeStatusQueryReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImMgrRawSysNeStatusQueryReq(XmsgImMgrRawSysNeStatusQueryReq&& from) noexcept
    : XmsgImMgrRawSysNeStatusQueryReq() {
    *this = ::std::move(from);
  }

  inline XmsgImMgrRawSysNeStatusQueryReq& operator=(XmsgImMgrRawSysNeStatusQueryReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImMgrRawSysNeStatusQueryReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImMgrRawSysNeStatusQueryReq* internal_default_instance() {
    return reinterpret_cast<const XmsgImMgrRawSysNeStatusQueryReq*>(
               &_XmsgImMgrRawSysNeStatusQueryReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(XmsgImMgrRawSysNeStatusQueryReq* other);
  friend void swap(XmsgImMgrRawSysNeStatusQueryReq& a, XmsgImMgrRawSysNeStatusQueryReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImMgrRawSysNeStatusQueryReq* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImMgrRawSysNeStatusQueryReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImMgrRawSysNeStatusQueryReq& from);
  void MergeFrom(const XmsgImMgrRawSysNeStatusQueryReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImMgrRawSysNeStatusQueryReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string cgt = 1;
  int cgt_size() const;
  void clear_cgt();
  static const int kCgtFieldNumber = 1;
  const ::std::string& cgt(int index) const;
  ::std::string* mutable_cgt(int index);
  void set_cgt(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_cgt(int index, ::std::string&& value);
  #endif
  void set_cgt(int index, const char* value);
  void set_cgt(int index, const char* value, size_t size);
  ::std::string* add_cgt();
  void add_cgt(const ::std::string& value);
  #if LANG_CXX11
  void add_cgt(::std::string&& value);
  #endif
  void add_cgt(const char* value);
  void add_cgt(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& cgt() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_cgt();

  // @@protoc_insertion_point(class_scope:XmsgImMgrRawSysNeStatusQueryReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> cgt_;
  mutable int _cached_size_;
  friend struct ::protobuf_sys_2dx_2dmsg_2dim_2dmgr_2eproto::TableStruct;
  friend void ::protobuf_sys_2dx_2dmsg_2dim_2dmgr_2eproto::InitDefaultsXmsgImMgrRawSysNeStatusQueryReqImpl();
};
// -------------------------------------------------------------------

class XmsgImMgrRawSysNeStatusQueryRsp_NeEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<XmsgImMgrRawSysNeStatusQueryRsp_NeEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<XmsgImMgrRawSysNeStatusQueryRsp_NeEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  XmsgImMgrRawSysNeStatusQueryRsp_NeEntry_DoNotUse();
  XmsgImMgrRawSysNeStatusQueryRsp_NeEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const XmsgImMgrRawSysNeStatusQueryRsp_NeEntry_DoNotUse& other);
  static const XmsgImMgrRawSysNeStatusQueryRsp_NeEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const XmsgImMgrRawSysNeStatusQueryRsp_NeEntry_DoNotUse*>(&_XmsgImMgrRawSysNeStatusQueryRsp_NeEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class XmsgImMgrRawSysNeStatusQueryRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgImMgrRawSysNeStatusQueryRsp) */ {
 public:
  XmsgImMgrRawSysNeStatusQueryRsp();
  virtual ~XmsgImMgrRawSysNeStatusQueryRsp();

  XmsgImMgrRawSysNeStatusQueryRsp(const XmsgImMgrRawSysNeStatusQueryRsp& from);

  inline XmsgImMgrRawSysNeStatusQueryRsp& operator=(const XmsgImMgrRawSysNeStatusQueryRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgImMgrRawSysNeStatusQueryRsp(XmsgImMgrRawSysNeStatusQueryRsp&& from) noexcept
    : XmsgImMgrRawSysNeStatusQueryRsp() {
    *this = ::std::move(from);
  }

  inline XmsgImMgrRawSysNeStatusQueryRsp& operator=(XmsgImMgrRawSysNeStatusQueryRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const XmsgImMgrRawSysNeStatusQueryRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgImMgrRawSysNeStatusQueryRsp* internal_default_instance() {
    return reinterpret_cast<const XmsgImMgrRawSysNeStatusQueryRsp*>(
               &_XmsgImMgrRawSysNeStatusQueryRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(XmsgImMgrRawSysNeStatusQueryRsp* other);
  friend void swap(XmsgImMgrRawSysNeStatusQueryRsp& a, XmsgImMgrRawSysNeStatusQueryRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgImMgrRawSysNeStatusQueryRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  XmsgImMgrRawSysNeStatusQueryRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const XmsgImMgrRawSysNeStatusQueryRsp& from);
  void MergeFrom(const XmsgImMgrRawSysNeStatusQueryRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(XmsgImMgrRawSysNeStatusQueryRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> ne = 1;
  int ne_size() const;
  void clear_ne();
  static const int kNeFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      ne() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_ne();

  // @@protoc_insertion_point(class_scope:XmsgImMgrRawSysNeStatusQueryRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      XmsgImMgrRawSysNeStatusQueryRsp_NeEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > ne_;
  mutable int _cached_size_;
  friend struct ::protobuf_sys_2dx_2dmsg_2dim_2dmgr_2eproto::TableStruct;
  friend void ::protobuf_sys_2dx_2dmsg_2dim_2dmgr_2eproto::InitDefaultsXmsgImMgrRawSysNeStatusQueryRspImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// XmsgApClientLostNotice

// string apCgt = 1;
inline void XmsgApClientLostNotice::clear_apcgt() {
  apcgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgApClientLostNotice::apcgt() const {
  // @@protoc_insertion_point(field_get:XmsgApClientLostNotice.apCgt)
  return apcgt_.GetNoArena();
}
inline void XmsgApClientLostNotice::set_apcgt(const ::std::string& value) {
  
  apcgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgApClientLostNotice.apCgt)
}
#if LANG_CXX11
inline void XmsgApClientLostNotice::set_apcgt(::std::string&& value) {
  
  apcgt_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgApClientLostNotice.apCgt)
}
#endif
inline void XmsgApClientLostNotice::set_apcgt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  apcgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgApClientLostNotice.apCgt)
}
inline void XmsgApClientLostNotice::set_apcgt(const char* value, size_t size) {
  
  apcgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgApClientLostNotice.apCgt)
}
inline ::std::string* XmsgApClientLostNotice::mutable_apcgt() {
  
  // @@protoc_insertion_point(field_mutable:XmsgApClientLostNotice.apCgt)
  return apcgt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgApClientLostNotice::release_apcgt() {
  // @@protoc_insertion_point(field_release:XmsgApClientLostNotice.apCgt)
  
  return apcgt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgApClientLostNotice::set_allocated_apcgt(::std::string* apcgt) {
  if (apcgt != NULL) {
    
  } else {
    
  }
  apcgt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), apcgt);
  // @@protoc_insertion_point(field_set_allocated:XmsgApClientLostNotice.apCgt)
}

// string cgt = 2;
inline void XmsgApClientLostNotice::clear_cgt() {
  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgApClientLostNotice::cgt() const {
  // @@protoc_insertion_point(field_get:XmsgApClientLostNotice.cgt)
  return cgt_.GetNoArena();
}
inline void XmsgApClientLostNotice::set_cgt(const ::std::string& value) {
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgApClientLostNotice.cgt)
}
#if LANG_CXX11
inline void XmsgApClientLostNotice::set_cgt(::std::string&& value) {
  
  cgt_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgApClientLostNotice.cgt)
}
#endif
inline void XmsgApClientLostNotice::set_cgt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgApClientLostNotice.cgt)
}
inline void XmsgApClientLostNotice::set_cgt(const char* value, size_t size) {
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgApClientLostNotice.cgt)
}
inline ::std::string* XmsgApClientLostNotice::mutable_cgt() {
  
  // @@protoc_insertion_point(field_mutable:XmsgApClientLostNotice.cgt)
  return cgt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgApClientLostNotice::release_cgt() {
  // @@protoc_insertion_point(field_release:XmsgApClientLostNotice.cgt)
  
  return cgt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgApClientLostNotice::set_allocated_cgt(::std::string* cgt) {
  if (cgt != NULL) {
    
  } else {
    
  }
  cgt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cgt);
  // @@protoc_insertion_point(field_set_allocated:XmsgApClientLostNotice.cgt)
}

// string plat = 3;
inline void XmsgApClientLostNotice::clear_plat() {
  plat_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgApClientLostNotice::plat() const {
  // @@protoc_insertion_point(field_get:XmsgApClientLostNotice.plat)
  return plat_.GetNoArena();
}
inline void XmsgApClientLostNotice::set_plat(const ::std::string& value) {
  
  plat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgApClientLostNotice.plat)
}
#if LANG_CXX11
inline void XmsgApClientLostNotice::set_plat(::std::string&& value) {
  
  plat_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgApClientLostNotice.plat)
}
#endif
inline void XmsgApClientLostNotice::set_plat(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  plat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgApClientLostNotice.plat)
}
inline void XmsgApClientLostNotice::set_plat(const char* value, size_t size) {
  
  plat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgApClientLostNotice.plat)
}
inline ::std::string* XmsgApClientLostNotice::mutable_plat() {
  
  // @@protoc_insertion_point(field_mutable:XmsgApClientLostNotice.plat)
  return plat_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgApClientLostNotice::release_plat() {
  // @@protoc_insertion_point(field_release:XmsgApClientLostNotice.plat)
  
  return plat_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgApClientLostNotice::set_allocated_plat(::std::string* plat) {
  if (plat != NULL) {
    
  } else {
    
  }
  plat_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), plat);
  // @@protoc_insertion_point(field_set_allocated:XmsgApClientLostNotice.plat)
}

// string did = 4;
inline void XmsgApClientLostNotice::clear_did() {
  did_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgApClientLostNotice::did() const {
  // @@protoc_insertion_point(field_get:XmsgApClientLostNotice.did)
  return did_.GetNoArena();
}
inline void XmsgApClientLostNotice::set_did(const ::std::string& value) {
  
  did_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgApClientLostNotice.did)
}
#if LANG_CXX11
inline void XmsgApClientLostNotice::set_did(::std::string&& value) {
  
  did_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgApClientLostNotice.did)
}
#endif
inline void XmsgApClientLostNotice::set_did(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  did_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgApClientLostNotice.did)
}
inline void XmsgApClientLostNotice::set_did(const char* value, size_t size) {
  
  did_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgApClientLostNotice.did)
}
inline ::std::string* XmsgApClientLostNotice::mutable_did() {
  
  // @@protoc_insertion_point(field_mutable:XmsgApClientLostNotice.did)
  return did_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgApClientLostNotice::release_did() {
  // @@protoc_insertion_point(field_release:XmsgApClientLostNotice.did)
  
  return did_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgApClientLostNotice::set_allocated_did(::std::string* did) {
  if (did != NULL) {
    
  } else {
    
  }
  did_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), did);
  // @@protoc_insertion_point(field_set_allocated:XmsgApClientLostNotice.did)
}

// string ccid = 5;
inline void XmsgApClientLostNotice::clear_ccid() {
  ccid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgApClientLostNotice::ccid() const {
  // @@protoc_insertion_point(field_get:XmsgApClientLostNotice.ccid)
  return ccid_.GetNoArena();
}
inline void XmsgApClientLostNotice::set_ccid(const ::std::string& value) {
  
  ccid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgApClientLostNotice.ccid)
}
#if LANG_CXX11
inline void XmsgApClientLostNotice::set_ccid(::std::string&& value) {
  
  ccid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgApClientLostNotice.ccid)
}
#endif
inline void XmsgApClientLostNotice::set_ccid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ccid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgApClientLostNotice.ccid)
}
inline void XmsgApClientLostNotice::set_ccid(const char* value, size_t size) {
  
  ccid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgApClientLostNotice.ccid)
}
inline ::std::string* XmsgApClientLostNotice::mutable_ccid() {
  
  // @@protoc_insertion_point(field_mutable:XmsgApClientLostNotice.ccid)
  return ccid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgApClientLostNotice::release_ccid() {
  // @@protoc_insertion_point(field_release:XmsgApClientLostNotice.ccid)
  
  return ccid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgApClientLostNotice::set_allocated_ccid(::std::string* ccid) {
  if (ccid != NULL) {
    
  } else {
    
  }
  ccid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ccid);
  // @@protoc_insertion_point(field_set_allocated:XmsgApClientLostNotice.ccid)
}

// -------------------------------------------------------------------

// XmsgApClientEstbNotice

// string apCgt = 1;
inline void XmsgApClientEstbNotice::clear_apcgt() {
  apcgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgApClientEstbNotice::apcgt() const {
  // @@protoc_insertion_point(field_get:XmsgApClientEstbNotice.apCgt)
  return apcgt_.GetNoArena();
}
inline void XmsgApClientEstbNotice::set_apcgt(const ::std::string& value) {
  
  apcgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgApClientEstbNotice.apCgt)
}
#if LANG_CXX11
inline void XmsgApClientEstbNotice::set_apcgt(::std::string&& value) {
  
  apcgt_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgApClientEstbNotice.apCgt)
}
#endif
inline void XmsgApClientEstbNotice::set_apcgt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  apcgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgApClientEstbNotice.apCgt)
}
inline void XmsgApClientEstbNotice::set_apcgt(const char* value, size_t size) {
  
  apcgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgApClientEstbNotice.apCgt)
}
inline ::std::string* XmsgApClientEstbNotice::mutable_apcgt() {
  
  // @@protoc_insertion_point(field_mutable:XmsgApClientEstbNotice.apCgt)
  return apcgt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgApClientEstbNotice::release_apcgt() {
  // @@protoc_insertion_point(field_release:XmsgApClientEstbNotice.apCgt)
  
  return apcgt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgApClientEstbNotice::set_allocated_apcgt(::std::string* apcgt) {
  if (apcgt != NULL) {
    
  } else {
    
  }
  apcgt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), apcgt);
  // @@protoc_insertion_point(field_set_allocated:XmsgApClientEstbNotice.apCgt)
}

// string cgt = 2;
inline void XmsgApClientEstbNotice::clear_cgt() {
  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgApClientEstbNotice::cgt() const {
  // @@protoc_insertion_point(field_get:XmsgApClientEstbNotice.cgt)
  return cgt_.GetNoArena();
}
inline void XmsgApClientEstbNotice::set_cgt(const ::std::string& value) {
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgApClientEstbNotice.cgt)
}
#if LANG_CXX11
inline void XmsgApClientEstbNotice::set_cgt(::std::string&& value) {
  
  cgt_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgApClientEstbNotice.cgt)
}
#endif
inline void XmsgApClientEstbNotice::set_cgt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgApClientEstbNotice.cgt)
}
inline void XmsgApClientEstbNotice::set_cgt(const char* value, size_t size) {
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgApClientEstbNotice.cgt)
}
inline ::std::string* XmsgApClientEstbNotice::mutable_cgt() {
  
  // @@protoc_insertion_point(field_mutable:XmsgApClientEstbNotice.cgt)
  return cgt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgApClientEstbNotice::release_cgt() {
  // @@protoc_insertion_point(field_release:XmsgApClientEstbNotice.cgt)
  
  return cgt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgApClientEstbNotice::set_allocated_cgt(::std::string* cgt) {
  if (cgt != NULL) {
    
  } else {
    
  }
  cgt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cgt);
  // @@protoc_insertion_point(field_set_allocated:XmsgApClientEstbNotice.cgt)
}

// string plat = 3;
inline void XmsgApClientEstbNotice::clear_plat() {
  plat_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgApClientEstbNotice::plat() const {
  // @@protoc_insertion_point(field_get:XmsgApClientEstbNotice.plat)
  return plat_.GetNoArena();
}
inline void XmsgApClientEstbNotice::set_plat(const ::std::string& value) {
  
  plat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgApClientEstbNotice.plat)
}
#if LANG_CXX11
inline void XmsgApClientEstbNotice::set_plat(::std::string&& value) {
  
  plat_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgApClientEstbNotice.plat)
}
#endif
inline void XmsgApClientEstbNotice::set_plat(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  plat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgApClientEstbNotice.plat)
}
inline void XmsgApClientEstbNotice::set_plat(const char* value, size_t size) {
  
  plat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgApClientEstbNotice.plat)
}
inline ::std::string* XmsgApClientEstbNotice::mutable_plat() {
  
  // @@protoc_insertion_point(field_mutable:XmsgApClientEstbNotice.plat)
  return plat_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgApClientEstbNotice::release_plat() {
  // @@protoc_insertion_point(field_release:XmsgApClientEstbNotice.plat)
  
  return plat_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgApClientEstbNotice::set_allocated_plat(::std::string* plat) {
  if (plat != NULL) {
    
  } else {
    
  }
  plat_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), plat);
  // @@protoc_insertion_point(field_set_allocated:XmsgApClientEstbNotice.plat)
}

// string did = 4;
inline void XmsgApClientEstbNotice::clear_did() {
  did_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgApClientEstbNotice::did() const {
  // @@protoc_insertion_point(field_get:XmsgApClientEstbNotice.did)
  return did_.GetNoArena();
}
inline void XmsgApClientEstbNotice::set_did(const ::std::string& value) {
  
  did_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgApClientEstbNotice.did)
}
#if LANG_CXX11
inline void XmsgApClientEstbNotice::set_did(::std::string&& value) {
  
  did_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgApClientEstbNotice.did)
}
#endif
inline void XmsgApClientEstbNotice::set_did(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  did_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgApClientEstbNotice.did)
}
inline void XmsgApClientEstbNotice::set_did(const char* value, size_t size) {
  
  did_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgApClientEstbNotice.did)
}
inline ::std::string* XmsgApClientEstbNotice::mutable_did() {
  
  // @@protoc_insertion_point(field_mutable:XmsgApClientEstbNotice.did)
  return did_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgApClientEstbNotice::release_did() {
  // @@protoc_insertion_point(field_release:XmsgApClientEstbNotice.did)
  
  return did_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgApClientEstbNotice::set_allocated_did(::std::string* did) {
  if (did != NULL) {
    
  } else {
    
  }
  did_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), did);
  // @@protoc_insertion_point(field_set_allocated:XmsgApClientEstbNotice.did)
}

// string ccid = 5;
inline void XmsgApClientEstbNotice::clear_ccid() {
  ccid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgApClientEstbNotice::ccid() const {
  // @@protoc_insertion_point(field_get:XmsgApClientEstbNotice.ccid)
  return ccid_.GetNoArena();
}
inline void XmsgApClientEstbNotice::set_ccid(const ::std::string& value) {
  
  ccid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgApClientEstbNotice.ccid)
}
#if LANG_CXX11
inline void XmsgApClientEstbNotice::set_ccid(::std::string&& value) {
  
  ccid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgApClientEstbNotice.ccid)
}
#endif
inline void XmsgApClientEstbNotice::set_ccid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ccid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgApClientEstbNotice.ccid)
}
inline void XmsgApClientEstbNotice::set_ccid(const char* value, size_t size) {
  
  ccid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgApClientEstbNotice.ccid)
}
inline ::std::string* XmsgApClientEstbNotice::mutable_ccid() {
  
  // @@protoc_insertion_point(field_mutable:XmsgApClientEstbNotice.ccid)
  return ccid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgApClientEstbNotice::release_ccid() {
  // @@protoc_insertion_point(field_release:XmsgApClientEstbNotice.ccid)
  
  return ccid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgApClientEstbNotice::set_allocated_ccid(::std::string* ccid) {
  if (ccid != NULL) {
    
  } else {
    
  }
  ccid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ccid);
  // @@protoc_insertion_point(field_set_allocated:XmsgApClientEstbNotice.ccid)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// XmsgImMgrRawSysNeQueryReq

// map<string, string> ext = 1;
inline int XmsgImMgrRawSysNeQueryReq::ext_size() const {
  return ext_.size();
}
inline void XmsgImMgrRawSysNeQueryReq::clear_ext() {
  ext_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
XmsgImMgrRawSysNeQueryReq::ext() const {
  // @@protoc_insertion_point(field_map:XmsgImMgrRawSysNeQueryReq.ext)
  return ext_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
XmsgImMgrRawSysNeQueryReq::mutable_ext() {
  // @@protoc_insertion_point(field_mutable_map:XmsgImMgrRawSysNeQueryReq.ext)
  return ext_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// XmsgImMgrRawSysNeQueryRsp

// map<string, string> ne = 1;
inline int XmsgImMgrRawSysNeQueryRsp::ne_size() const {
  return ne_.size();
}
inline void XmsgImMgrRawSysNeQueryRsp::clear_ne() {
  ne_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
XmsgImMgrRawSysNeQueryRsp::ne() const {
  // @@protoc_insertion_point(field_map:XmsgImMgrRawSysNeQueryRsp.ne)
  return ne_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
XmsgImMgrRawSysNeQueryRsp::mutable_ne() {
  // @@protoc_insertion_point(field_mutable_map:XmsgImMgrRawSysNeQueryRsp.ne)
  return ne_.MutableMap();
}

// -------------------------------------------------------------------

// XmsgImMgrRawSysNeStatusQueryReq

// repeated string cgt = 1;
inline int XmsgImMgrRawSysNeStatusQueryReq::cgt_size() const {
  return cgt_.size();
}
inline void XmsgImMgrRawSysNeStatusQueryReq::clear_cgt() {
  cgt_.Clear();
}
inline const ::std::string& XmsgImMgrRawSysNeStatusQueryReq::cgt(int index) const {
  // @@protoc_insertion_point(field_get:XmsgImMgrRawSysNeStatusQueryReq.cgt)
  return cgt_.Get(index);
}
inline ::std::string* XmsgImMgrRawSysNeStatusQueryReq::mutable_cgt(int index) {
  // @@protoc_insertion_point(field_mutable:XmsgImMgrRawSysNeStatusQueryReq.cgt)
  return cgt_.Mutable(index);
}
inline void XmsgImMgrRawSysNeStatusQueryReq::set_cgt(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:XmsgImMgrRawSysNeStatusQueryReq.cgt)
  cgt_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void XmsgImMgrRawSysNeStatusQueryReq::set_cgt(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:XmsgImMgrRawSysNeStatusQueryReq.cgt)
  cgt_.Mutable(index)->assign(std::move(value));
}
#endif
inline void XmsgImMgrRawSysNeStatusQueryReq::set_cgt(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  cgt_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:XmsgImMgrRawSysNeStatusQueryReq.cgt)
}
inline void XmsgImMgrRawSysNeStatusQueryReq::set_cgt(int index, const char* value, size_t size) {
  cgt_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:XmsgImMgrRawSysNeStatusQueryReq.cgt)
}
inline ::std::string* XmsgImMgrRawSysNeStatusQueryReq::add_cgt() {
  // @@protoc_insertion_point(field_add_mutable:XmsgImMgrRawSysNeStatusQueryReq.cgt)
  return cgt_.Add();
}
inline void XmsgImMgrRawSysNeStatusQueryReq::add_cgt(const ::std::string& value) {
  cgt_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:XmsgImMgrRawSysNeStatusQueryReq.cgt)
}
#if LANG_CXX11
inline void XmsgImMgrRawSysNeStatusQueryReq::add_cgt(::std::string&& value) {
  cgt_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:XmsgImMgrRawSysNeStatusQueryReq.cgt)
}
#endif
inline void XmsgImMgrRawSysNeStatusQueryReq::add_cgt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  cgt_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:XmsgImMgrRawSysNeStatusQueryReq.cgt)
}
inline void XmsgImMgrRawSysNeStatusQueryReq::add_cgt(const char* value, size_t size) {
  cgt_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:XmsgImMgrRawSysNeStatusQueryReq.cgt)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
XmsgImMgrRawSysNeStatusQueryReq::cgt() const {
  // @@protoc_insertion_point(field_list:XmsgImMgrRawSysNeStatusQueryReq.cgt)
  return cgt_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
XmsgImMgrRawSysNeStatusQueryReq::mutable_cgt() {
  // @@protoc_insertion_point(field_mutable_list:XmsgImMgrRawSysNeStatusQueryReq.cgt)
  return &cgt_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// XmsgImMgrRawSysNeStatusQueryRsp

// map<string, string> ne = 1;
inline int XmsgImMgrRawSysNeStatusQueryRsp::ne_size() const {
  return ne_.size();
}
inline void XmsgImMgrRawSysNeStatusQueryRsp::clear_ne() {
  ne_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
XmsgImMgrRawSysNeStatusQueryRsp::ne() const {
  // @@protoc_insertion_point(field_map:XmsgImMgrRawSysNeStatusQueryRsp.ne)
  return ne_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
XmsgImMgrRawSysNeStatusQueryRsp::mutable_ne() {
  // @@protoc_insertion_point(field_mutable_map:XmsgImMgrRawSysNeStatusQueryRsp.ne)
  return ne_.MutableMap();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_sys_2dx_2dmsg_2dim_2dmgr_2eproto__INCLUDED
