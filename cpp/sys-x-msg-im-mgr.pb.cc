// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sys-x-msg-im-mgr.proto

#include "sys-x-msg-im-mgr.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
class XmsgApClientLostNoticeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgApClientLostNotice>
      _instance;
} _XmsgApClientLostNotice_default_instance_;
class XmsgApClientEstbNoticeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgApClientEstbNotice>
      _instance;
} _XmsgApClientEstbNotice_default_instance_;
class XmsgImMgrRawSysNeQueryReq_ExtEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImMgrRawSysNeQueryReq_ExtEntry_DoNotUse>
      _instance;
} _XmsgImMgrRawSysNeQueryReq_ExtEntry_DoNotUse_default_instance_;
class XmsgImMgrRawSysNeQueryReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImMgrRawSysNeQueryReq>
      _instance;
} _XmsgImMgrRawSysNeQueryReq_default_instance_;
class XmsgImMgrRawSysNeQueryRsp_NeEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImMgrRawSysNeQueryRsp_NeEntry_DoNotUse>
      _instance;
} _XmsgImMgrRawSysNeQueryRsp_NeEntry_DoNotUse_default_instance_;
class XmsgImMgrRawSysNeQueryRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImMgrRawSysNeQueryRsp>
      _instance;
} _XmsgImMgrRawSysNeQueryRsp_default_instance_;
class XmsgImMgrRawSysNeStatusQueryReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImMgrRawSysNeStatusQueryReq>
      _instance;
} _XmsgImMgrRawSysNeStatusQueryReq_default_instance_;
class XmsgImMgrRawSysNeStatusQueryRsp_NeEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImMgrRawSysNeStatusQueryRsp_NeEntry_DoNotUse>
      _instance;
} _XmsgImMgrRawSysNeStatusQueryRsp_NeEntry_DoNotUse_default_instance_;
class XmsgImMgrRawSysNeStatusQueryRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<XmsgImMgrRawSysNeStatusQueryRsp>
      _instance;
} _XmsgImMgrRawSysNeStatusQueryRsp_default_instance_;
namespace protobuf_sys_2dx_2dmsg_2dim_2dmgr_2eproto {
void InitDefaultsXmsgApClientLostNoticeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgApClientLostNotice_default_instance_;
    new (ptr) ::XmsgApClientLostNotice();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgApClientLostNotice::InitAsDefaultInstance();
}

void InitDefaultsXmsgApClientLostNotice() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgApClientLostNoticeImpl);
}

void InitDefaultsXmsgApClientEstbNoticeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgApClientEstbNotice_default_instance_;
    new (ptr) ::XmsgApClientEstbNotice();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgApClientEstbNotice::InitAsDefaultInstance();
}

void InitDefaultsXmsgApClientEstbNotice() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgApClientEstbNoticeImpl);
}

void InitDefaultsXmsgImMgrRawSysNeQueryReq_ExtEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImMgrRawSysNeQueryReq_ExtEntry_DoNotUse_default_instance_;
    new (ptr) ::XmsgImMgrRawSysNeQueryReq_ExtEntry_DoNotUse();
  }
  ::XmsgImMgrRawSysNeQueryReq_ExtEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsXmsgImMgrRawSysNeQueryReq_ExtEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImMgrRawSysNeQueryReq_ExtEntry_DoNotUseImpl);
}

void InitDefaultsXmsgImMgrRawSysNeQueryReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sys_2dx_2dmsg_2dim_2dmgr_2eproto::InitDefaultsXmsgImMgrRawSysNeQueryReq_ExtEntry_DoNotUse();
  {
    void* ptr = &::_XmsgImMgrRawSysNeQueryReq_default_instance_;
    new (ptr) ::XmsgImMgrRawSysNeQueryReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImMgrRawSysNeQueryReq::InitAsDefaultInstance();
}

void InitDefaultsXmsgImMgrRawSysNeQueryReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImMgrRawSysNeQueryReqImpl);
}

void InitDefaultsXmsgImMgrRawSysNeQueryRsp_NeEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImMgrRawSysNeQueryRsp_NeEntry_DoNotUse_default_instance_;
    new (ptr) ::XmsgImMgrRawSysNeQueryRsp_NeEntry_DoNotUse();
  }
  ::XmsgImMgrRawSysNeQueryRsp_NeEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsXmsgImMgrRawSysNeQueryRsp_NeEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImMgrRawSysNeQueryRsp_NeEntry_DoNotUseImpl);
}

void InitDefaultsXmsgImMgrRawSysNeQueryRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sys_2dx_2dmsg_2dim_2dmgr_2eproto::InitDefaultsXmsgImMgrRawSysNeQueryRsp_NeEntry_DoNotUse();
  {
    void* ptr = &::_XmsgImMgrRawSysNeQueryRsp_default_instance_;
    new (ptr) ::XmsgImMgrRawSysNeQueryRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImMgrRawSysNeQueryRsp::InitAsDefaultInstance();
}

void InitDefaultsXmsgImMgrRawSysNeQueryRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImMgrRawSysNeQueryRspImpl);
}

void InitDefaultsXmsgImMgrRawSysNeStatusQueryReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImMgrRawSysNeStatusQueryReq_default_instance_;
    new (ptr) ::XmsgImMgrRawSysNeStatusQueryReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImMgrRawSysNeStatusQueryReq::InitAsDefaultInstance();
}

void InitDefaultsXmsgImMgrRawSysNeStatusQueryReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImMgrRawSysNeStatusQueryReqImpl);
}

void InitDefaultsXmsgImMgrRawSysNeStatusQueryRsp_NeEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_XmsgImMgrRawSysNeStatusQueryRsp_NeEntry_DoNotUse_default_instance_;
    new (ptr) ::XmsgImMgrRawSysNeStatusQueryRsp_NeEntry_DoNotUse();
  }
  ::XmsgImMgrRawSysNeStatusQueryRsp_NeEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsXmsgImMgrRawSysNeStatusQueryRsp_NeEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImMgrRawSysNeStatusQueryRsp_NeEntry_DoNotUseImpl);
}

void InitDefaultsXmsgImMgrRawSysNeStatusQueryRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sys_2dx_2dmsg_2dim_2dmgr_2eproto::InitDefaultsXmsgImMgrRawSysNeStatusQueryRsp_NeEntry_DoNotUse();
  {
    void* ptr = &::_XmsgImMgrRawSysNeStatusQueryRsp_default_instance_;
    new (ptr) ::XmsgImMgrRawSysNeStatusQueryRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::XmsgImMgrRawSysNeStatusQueryRsp::InitAsDefaultInstance();
}

void InitDefaultsXmsgImMgrRawSysNeStatusQueryRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXmsgImMgrRawSysNeStatusQueryRspImpl);
}

::google::protobuf::Metadata file_level_metadata[9];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgApClientLostNotice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgApClientLostNotice, apcgt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgApClientLostNotice, cgt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgApClientLostNotice, plat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgApClientLostNotice, did_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgApClientLostNotice, ccid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgApClientEstbNotice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgApClientEstbNotice, apcgt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgApClientEstbNotice, cgt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgApClientEstbNotice, plat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgApClientEstbNotice, did_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgApClientEstbNotice, ccid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImMgrRawSysNeQueryReq_ExtEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImMgrRawSysNeQueryReq_ExtEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImMgrRawSysNeQueryReq_ExtEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImMgrRawSysNeQueryReq_ExtEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImMgrRawSysNeQueryReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImMgrRawSysNeQueryReq, ext_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImMgrRawSysNeQueryRsp_NeEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImMgrRawSysNeQueryRsp_NeEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImMgrRawSysNeQueryRsp_NeEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImMgrRawSysNeQueryRsp_NeEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImMgrRawSysNeQueryRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImMgrRawSysNeQueryRsp, ne_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImMgrRawSysNeStatusQueryReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImMgrRawSysNeStatusQueryReq, cgt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImMgrRawSysNeStatusQueryRsp_NeEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImMgrRawSysNeStatusQueryRsp_NeEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImMgrRawSysNeStatusQueryRsp_NeEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImMgrRawSysNeStatusQueryRsp_NeEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImMgrRawSysNeStatusQueryRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::XmsgImMgrRawSysNeStatusQueryRsp, ne_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::XmsgApClientLostNotice)},
  { 10, -1, sizeof(::XmsgApClientEstbNotice)},
  { 20, 27, sizeof(::XmsgImMgrRawSysNeQueryReq_ExtEntry_DoNotUse)},
  { 29, -1, sizeof(::XmsgImMgrRawSysNeQueryReq)},
  { 35, 42, sizeof(::XmsgImMgrRawSysNeQueryRsp_NeEntry_DoNotUse)},
  { 44, -1, sizeof(::XmsgImMgrRawSysNeQueryRsp)},
  { 50, -1, sizeof(::XmsgImMgrRawSysNeStatusQueryReq)},
  { 56, 63, sizeof(::XmsgImMgrRawSysNeStatusQueryRsp_NeEntry_DoNotUse)},
  { 65, -1, sizeof(::XmsgImMgrRawSysNeStatusQueryRsp)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgApClientLostNotice_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgApClientEstbNotice_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImMgrRawSysNeQueryReq_ExtEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImMgrRawSysNeQueryReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImMgrRawSysNeQueryRsp_NeEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImMgrRawSysNeQueryRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImMgrRawSysNeStatusQueryReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImMgrRawSysNeStatusQueryRsp_NeEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_XmsgImMgrRawSysNeStatusQueryRsp_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "sys-x-msg-im-mgr.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 9);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\026sys-x-msg-im-mgr.proto\"]\n\026XmsgApClient"
      "LostNotice\022\r\n\005apCgt\030\001 \001(\t\022\013\n\003cgt\030\002 \001(\t\022\014"
      "\n\004plat\030\003 \001(\t\022\013\n\003did\030\004 \001(\t\022\014\n\004ccid\030\005 \001(\t\""
      "]\n\026XmsgApClientEstbNotice\022\r\n\005apCgt\030\001 \001(\t"
      "\022\013\n\003cgt\030\002 \001(\t\022\014\n\004plat\030\003 \001(\t\022\013\n\003did\030\004 \001(\t"
      "\022\014\n\004ccid\030\005 \001(\t\"y\n\031XmsgImMgrRawSysNeQuery"
      "Req\0220\n\003ext\030\001 \003(\0132#.XmsgImMgrRawSysNeQuer"
      "yReq.ExtEntry\032*\n\010ExtEntry\022\013\n\003key\030\001 \001(\t\022\r"
      "\n\005value\030\002 \001(\t:\0028\001\"v\n\031XmsgImMgrRawSysNeQu"
      "eryRsp\022.\n\002ne\030\001 \003(\0132\".XmsgImMgrRawSysNeQu"
      "eryRsp.NeEntry\032)\n\007NeEntry\022\013\n\003key\030\001 \001(\t\022\r"
      "\n\005value\030\002 \001(\t:\0028\001\".\n\037XmsgImMgrRawSysNeSt"
      "atusQueryReq\022\013\n\003cgt\030\001 \003(\t\"\202\001\n\037XmsgImMgrR"
      "awSysNeStatusQueryRsp\0224\n\002ne\030\001 \003(\0132(.Xmsg"
      "ImMgrRawSysNeStatusQueryRsp.NeEntry\032)\n\007N"
      "eEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001B\032"
      "\n\010x.msg.pbB\016XmsgImMgrSysPbb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 674);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "sys-x-msg-im-mgr.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_sys_2dx_2dmsg_2dim_2dmgr_2eproto

// ===================================================================

void XmsgApClientLostNotice::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgApClientLostNotice::kApCgtFieldNumber;
const int XmsgApClientLostNotice::kCgtFieldNumber;
const int XmsgApClientLostNotice::kPlatFieldNumber;
const int XmsgApClientLostNotice::kDidFieldNumber;
const int XmsgApClientLostNotice::kCcidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgApClientLostNotice::XmsgApClientLostNotice()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sys_2dx_2dmsg_2dim_2dmgr_2eproto::InitDefaultsXmsgApClientLostNotice();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgApClientLostNotice)
}
XmsgApClientLostNotice::XmsgApClientLostNotice(const XmsgApClientLostNotice& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  apcgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.apcgt().size() > 0) {
    apcgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.apcgt_);
  }
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cgt().size() > 0) {
    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  plat_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.plat().size() > 0) {
    plat_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plat_);
  }
  did_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.did().size() > 0) {
    did_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.did_);
  }
  ccid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ccid().size() > 0) {
    ccid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ccid_);
  }
  // @@protoc_insertion_point(copy_constructor:XmsgApClientLostNotice)
}

void XmsgApClientLostNotice::SharedCtor() {
  apcgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plat_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  did_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ccid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

XmsgApClientLostNotice::~XmsgApClientLostNotice() {
  // @@protoc_insertion_point(destructor:XmsgApClientLostNotice)
  SharedDtor();
}

void XmsgApClientLostNotice::SharedDtor() {
  apcgt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cgt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plat_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  did_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ccid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XmsgApClientLostNotice::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgApClientLostNotice::descriptor() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dmgr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dmgr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgApClientLostNotice& XmsgApClientLostNotice::default_instance() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dmgr_2eproto::InitDefaultsXmsgApClientLostNotice();
  return *internal_default_instance();
}

XmsgApClientLostNotice* XmsgApClientLostNotice::New(::google::protobuf::Arena* arena) const {
  XmsgApClientLostNotice* n = new XmsgApClientLostNotice;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgApClientLostNotice::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgApClientLostNotice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  apcgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plat_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  did_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ccid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool XmsgApClientLostNotice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgApClientLostNotice)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string apCgt = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_apcgt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->apcgt().data(), static_cast<int>(this->apcgt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgApClientLostNotice.apCgt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cgt = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cgt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cgt().data(), static_cast<int>(this->cgt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgApClientLostNotice.cgt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string plat = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_plat()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->plat().data(), static_cast<int>(this->plat().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgApClientLostNotice.plat"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string did = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_did()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->did().data(), static_cast<int>(this->did().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgApClientLostNotice.did"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ccid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ccid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ccid().data(), static_cast<int>(this->ccid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgApClientLostNotice.ccid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgApClientLostNotice)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgApClientLostNotice)
  return false;
#undef DO_
}

void XmsgApClientLostNotice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgApClientLostNotice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string apCgt = 1;
  if (this->apcgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->apcgt().data(), static_cast<int>(this->apcgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgApClientLostNotice.apCgt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->apcgt(), output);
  }

  // string cgt = 2;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgApClientLostNotice.cgt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->cgt(), output);
  }

  // string plat = 3;
  if (this->plat().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->plat().data(), static_cast<int>(this->plat().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgApClientLostNotice.plat");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->plat(), output);
  }

  // string did = 4;
  if (this->did().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->did().data(), static_cast<int>(this->did().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgApClientLostNotice.did");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->did(), output);
  }

  // string ccid = 5;
  if (this->ccid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ccid().data(), static_cast<int>(this->ccid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgApClientLostNotice.ccid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->ccid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgApClientLostNotice)
}

::google::protobuf::uint8* XmsgApClientLostNotice::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgApClientLostNotice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string apCgt = 1;
  if (this->apcgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->apcgt().data(), static_cast<int>(this->apcgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgApClientLostNotice.apCgt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->apcgt(), target);
  }

  // string cgt = 2;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgApClientLostNotice.cgt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->cgt(), target);
  }

  // string plat = 3;
  if (this->plat().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->plat().data(), static_cast<int>(this->plat().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgApClientLostNotice.plat");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->plat(), target);
  }

  // string did = 4;
  if (this->did().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->did().data(), static_cast<int>(this->did().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgApClientLostNotice.did");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->did(), target);
  }

  // string ccid = 5;
  if (this->ccid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ccid().data(), static_cast<int>(this->ccid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgApClientLostNotice.ccid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->ccid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgApClientLostNotice)
  return target;
}

size_t XmsgApClientLostNotice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgApClientLostNotice)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string apCgt = 1;
  if (this->apcgt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->apcgt());
  }

  // string cgt = 2;
  if (this->cgt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cgt());
  }

  // string plat = 3;
  if (this->plat().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->plat());
  }

  // string did = 4;
  if (this->did().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->did());
  }

  // string ccid = 5;
  if (this->ccid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ccid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgApClientLostNotice::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgApClientLostNotice)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgApClientLostNotice* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgApClientLostNotice>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgApClientLostNotice)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgApClientLostNotice)
    MergeFrom(*source);
  }
}

void XmsgApClientLostNotice::MergeFrom(const XmsgApClientLostNotice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgApClientLostNotice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.apcgt().size() > 0) {

    apcgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.apcgt_);
  }
  if (from.cgt().size() > 0) {

    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  if (from.plat().size() > 0) {

    plat_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plat_);
  }
  if (from.did().size() > 0) {

    did_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.did_);
  }
  if (from.ccid().size() > 0) {

    ccid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ccid_);
  }
}

void XmsgApClientLostNotice::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgApClientLostNotice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgApClientLostNotice::CopyFrom(const XmsgApClientLostNotice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgApClientLostNotice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgApClientLostNotice::IsInitialized() const {
  return true;
}

void XmsgApClientLostNotice::Swap(XmsgApClientLostNotice* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgApClientLostNotice::InternalSwap(XmsgApClientLostNotice* other) {
  using std::swap;
  apcgt_.Swap(&other->apcgt_);
  cgt_.Swap(&other->cgt_);
  plat_.Swap(&other->plat_);
  did_.Swap(&other->did_);
  ccid_.Swap(&other->ccid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgApClientLostNotice::GetMetadata() const {
  protobuf_sys_2dx_2dmsg_2dim_2dmgr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dmgr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgApClientEstbNotice::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgApClientEstbNotice::kApCgtFieldNumber;
const int XmsgApClientEstbNotice::kCgtFieldNumber;
const int XmsgApClientEstbNotice::kPlatFieldNumber;
const int XmsgApClientEstbNotice::kDidFieldNumber;
const int XmsgApClientEstbNotice::kCcidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgApClientEstbNotice::XmsgApClientEstbNotice()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sys_2dx_2dmsg_2dim_2dmgr_2eproto::InitDefaultsXmsgApClientEstbNotice();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgApClientEstbNotice)
}
XmsgApClientEstbNotice::XmsgApClientEstbNotice(const XmsgApClientEstbNotice& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  apcgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.apcgt().size() > 0) {
    apcgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.apcgt_);
  }
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cgt().size() > 0) {
    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  plat_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.plat().size() > 0) {
    plat_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plat_);
  }
  did_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.did().size() > 0) {
    did_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.did_);
  }
  ccid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ccid().size() > 0) {
    ccid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ccid_);
  }
  // @@protoc_insertion_point(copy_constructor:XmsgApClientEstbNotice)
}

void XmsgApClientEstbNotice::SharedCtor() {
  apcgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cgt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plat_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  did_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ccid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

XmsgApClientEstbNotice::~XmsgApClientEstbNotice() {
  // @@protoc_insertion_point(destructor:XmsgApClientEstbNotice)
  SharedDtor();
}

void XmsgApClientEstbNotice::SharedDtor() {
  apcgt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cgt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plat_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  did_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ccid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void XmsgApClientEstbNotice::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgApClientEstbNotice::descriptor() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dmgr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dmgr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgApClientEstbNotice& XmsgApClientEstbNotice::default_instance() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dmgr_2eproto::InitDefaultsXmsgApClientEstbNotice();
  return *internal_default_instance();
}

XmsgApClientEstbNotice* XmsgApClientEstbNotice::New(::google::protobuf::Arena* arena) const {
  XmsgApClientEstbNotice* n = new XmsgApClientEstbNotice;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgApClientEstbNotice::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgApClientEstbNotice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  apcgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plat_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  did_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ccid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool XmsgApClientEstbNotice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgApClientEstbNotice)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string apCgt = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_apcgt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->apcgt().data(), static_cast<int>(this->apcgt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgApClientEstbNotice.apCgt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cgt = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cgt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cgt().data(), static_cast<int>(this->cgt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgApClientEstbNotice.cgt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string plat = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_plat()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->plat().data(), static_cast<int>(this->plat().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgApClientEstbNotice.plat"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string did = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_did()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->did().data(), static_cast<int>(this->did().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgApClientEstbNotice.did"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ccid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ccid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ccid().data(), static_cast<int>(this->ccid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgApClientEstbNotice.ccid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgApClientEstbNotice)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgApClientEstbNotice)
  return false;
#undef DO_
}

void XmsgApClientEstbNotice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgApClientEstbNotice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string apCgt = 1;
  if (this->apcgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->apcgt().data(), static_cast<int>(this->apcgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgApClientEstbNotice.apCgt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->apcgt(), output);
  }

  // string cgt = 2;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgApClientEstbNotice.cgt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->cgt(), output);
  }

  // string plat = 3;
  if (this->plat().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->plat().data(), static_cast<int>(this->plat().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgApClientEstbNotice.plat");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->plat(), output);
  }

  // string did = 4;
  if (this->did().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->did().data(), static_cast<int>(this->did().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgApClientEstbNotice.did");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->did(), output);
  }

  // string ccid = 5;
  if (this->ccid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ccid().data(), static_cast<int>(this->ccid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgApClientEstbNotice.ccid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->ccid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgApClientEstbNotice)
}

::google::protobuf::uint8* XmsgApClientEstbNotice::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgApClientEstbNotice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string apCgt = 1;
  if (this->apcgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->apcgt().data(), static_cast<int>(this->apcgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgApClientEstbNotice.apCgt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->apcgt(), target);
  }

  // string cgt = 2;
  if (this->cgt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt().data(), static_cast<int>(this->cgt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgApClientEstbNotice.cgt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->cgt(), target);
  }

  // string plat = 3;
  if (this->plat().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->plat().data(), static_cast<int>(this->plat().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgApClientEstbNotice.plat");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->plat(), target);
  }

  // string did = 4;
  if (this->did().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->did().data(), static_cast<int>(this->did().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgApClientEstbNotice.did");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->did(), target);
  }

  // string ccid = 5;
  if (this->ccid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ccid().data(), static_cast<int>(this->ccid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgApClientEstbNotice.ccid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->ccid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgApClientEstbNotice)
  return target;
}

size_t XmsgApClientEstbNotice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgApClientEstbNotice)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string apCgt = 1;
  if (this->apcgt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->apcgt());
  }

  // string cgt = 2;
  if (this->cgt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cgt());
  }

  // string plat = 3;
  if (this->plat().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->plat());
  }

  // string did = 4;
  if (this->did().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->did());
  }

  // string ccid = 5;
  if (this->ccid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ccid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgApClientEstbNotice::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgApClientEstbNotice)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgApClientEstbNotice* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgApClientEstbNotice>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgApClientEstbNotice)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgApClientEstbNotice)
    MergeFrom(*source);
  }
}

void XmsgApClientEstbNotice::MergeFrom(const XmsgApClientEstbNotice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgApClientEstbNotice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.apcgt().size() > 0) {

    apcgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.apcgt_);
  }
  if (from.cgt().size() > 0) {

    cgt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgt_);
  }
  if (from.plat().size() > 0) {

    plat_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plat_);
  }
  if (from.did().size() > 0) {

    did_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.did_);
  }
  if (from.ccid().size() > 0) {

    ccid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ccid_);
  }
}

void XmsgApClientEstbNotice::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgApClientEstbNotice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgApClientEstbNotice::CopyFrom(const XmsgApClientEstbNotice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgApClientEstbNotice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgApClientEstbNotice::IsInitialized() const {
  return true;
}

void XmsgApClientEstbNotice::Swap(XmsgApClientEstbNotice* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgApClientEstbNotice::InternalSwap(XmsgApClientEstbNotice* other) {
  using std::swap;
  apcgt_.Swap(&other->apcgt_);
  cgt_.Swap(&other->cgt_);
  plat_.Swap(&other->plat_);
  did_.Swap(&other->did_);
  ccid_.Swap(&other->ccid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgApClientEstbNotice::GetMetadata() const {
  protobuf_sys_2dx_2dmsg_2dim_2dmgr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dmgr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

XmsgImMgrRawSysNeQueryReq_ExtEntry_DoNotUse::XmsgImMgrRawSysNeQueryReq_ExtEntry_DoNotUse() {}
XmsgImMgrRawSysNeQueryReq_ExtEntry_DoNotUse::XmsgImMgrRawSysNeQueryReq_ExtEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void XmsgImMgrRawSysNeQueryReq_ExtEntry_DoNotUse::MergeFrom(const XmsgImMgrRawSysNeQueryReq_ExtEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata XmsgImMgrRawSysNeQueryReq_ExtEntry_DoNotUse::GetMetadata() const {
  ::protobuf_sys_2dx_2dmsg_2dim_2dmgr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dmgr_2eproto::file_level_metadata[2];
}
void XmsgImMgrRawSysNeQueryReq_ExtEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void XmsgImMgrRawSysNeQueryReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImMgrRawSysNeQueryReq::kExtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImMgrRawSysNeQueryReq::XmsgImMgrRawSysNeQueryReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sys_2dx_2dmsg_2dim_2dmgr_2eproto::InitDefaultsXmsgImMgrRawSysNeQueryReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImMgrRawSysNeQueryReq)
}
XmsgImMgrRawSysNeQueryReq::XmsgImMgrRawSysNeQueryReq(const XmsgImMgrRawSysNeQueryReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ext_.MergeFrom(from.ext_);
  // @@protoc_insertion_point(copy_constructor:XmsgImMgrRawSysNeQueryReq)
}

void XmsgImMgrRawSysNeQueryReq::SharedCtor() {
  _cached_size_ = 0;
}

XmsgImMgrRawSysNeQueryReq::~XmsgImMgrRawSysNeQueryReq() {
  // @@protoc_insertion_point(destructor:XmsgImMgrRawSysNeQueryReq)
  SharedDtor();
}

void XmsgImMgrRawSysNeQueryReq::SharedDtor() {
}

void XmsgImMgrRawSysNeQueryReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImMgrRawSysNeQueryReq::descriptor() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dmgr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dmgr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImMgrRawSysNeQueryReq& XmsgImMgrRawSysNeQueryReq::default_instance() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dmgr_2eproto::InitDefaultsXmsgImMgrRawSysNeQueryReq();
  return *internal_default_instance();
}

XmsgImMgrRawSysNeQueryReq* XmsgImMgrRawSysNeQueryReq::New(::google::protobuf::Arena* arena) const {
  XmsgImMgrRawSysNeQueryReq* n = new XmsgImMgrRawSysNeQueryReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImMgrRawSysNeQueryReq::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImMgrRawSysNeQueryReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ext_.Clear();
  _internal_metadata_.Clear();
}

bool XmsgImMgrRawSysNeQueryReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImMgrRawSysNeQueryReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, string> ext = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          XmsgImMgrRawSysNeQueryReq_ExtEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              XmsgImMgrRawSysNeQueryReq_ExtEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&ext_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImMgrRawSysNeQueryReq.ExtEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImMgrRawSysNeQueryReq.ExtEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImMgrRawSysNeQueryReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImMgrRawSysNeQueryReq)
  return false;
#undef DO_
}

void XmsgImMgrRawSysNeQueryReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImMgrRawSysNeQueryReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> ext = 1;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImMgrRawSysNeQueryReq.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImMgrRawSysNeQueryReq.ExtEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImMgrRawSysNeQueryReq_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImMgrRawSysNeQueryReq_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImMgrRawSysNeQueryReq)
}

::google::protobuf::uint8* XmsgImMgrRawSysNeQueryReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImMgrRawSysNeQueryReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> ext = 1;
  if (!this->ext().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImMgrRawSysNeQueryReq.ExtEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImMgrRawSysNeQueryReq.ExtEntry.value");
      }
    };

    if (deterministic &&
        this->ext().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ext().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImMgrRawSysNeQueryReq_ExtEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ext_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImMgrRawSysNeQueryReq_ExtEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ext().begin();
          it != this->ext().end(); ++it) {
        entry.reset(ext_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImMgrRawSysNeQueryReq)
  return target;
}

size_t XmsgImMgrRawSysNeQueryReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImMgrRawSysNeQueryReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> ext = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->ext_size());
  {
    ::google::protobuf::scoped_ptr<XmsgImMgrRawSysNeQueryReq_ExtEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->ext().begin();
        it != this->ext().end(); ++it) {
      entry.reset(ext_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImMgrRawSysNeQueryReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImMgrRawSysNeQueryReq)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImMgrRawSysNeQueryReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImMgrRawSysNeQueryReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImMgrRawSysNeQueryReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImMgrRawSysNeQueryReq)
    MergeFrom(*source);
  }
}

void XmsgImMgrRawSysNeQueryReq::MergeFrom(const XmsgImMgrRawSysNeQueryReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImMgrRawSysNeQueryReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ext_.MergeFrom(from.ext_);
}

void XmsgImMgrRawSysNeQueryReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImMgrRawSysNeQueryReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImMgrRawSysNeQueryReq::CopyFrom(const XmsgImMgrRawSysNeQueryReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImMgrRawSysNeQueryReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImMgrRawSysNeQueryReq::IsInitialized() const {
  return true;
}

void XmsgImMgrRawSysNeQueryReq::Swap(XmsgImMgrRawSysNeQueryReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImMgrRawSysNeQueryReq::InternalSwap(XmsgImMgrRawSysNeQueryReq* other) {
  using std::swap;
  ext_.Swap(&other->ext_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImMgrRawSysNeQueryReq::GetMetadata() const {
  protobuf_sys_2dx_2dmsg_2dim_2dmgr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dmgr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

XmsgImMgrRawSysNeQueryRsp_NeEntry_DoNotUse::XmsgImMgrRawSysNeQueryRsp_NeEntry_DoNotUse() {}
XmsgImMgrRawSysNeQueryRsp_NeEntry_DoNotUse::XmsgImMgrRawSysNeQueryRsp_NeEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void XmsgImMgrRawSysNeQueryRsp_NeEntry_DoNotUse::MergeFrom(const XmsgImMgrRawSysNeQueryRsp_NeEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata XmsgImMgrRawSysNeQueryRsp_NeEntry_DoNotUse::GetMetadata() const {
  ::protobuf_sys_2dx_2dmsg_2dim_2dmgr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dmgr_2eproto::file_level_metadata[4];
}
void XmsgImMgrRawSysNeQueryRsp_NeEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void XmsgImMgrRawSysNeQueryRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImMgrRawSysNeQueryRsp::kNeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImMgrRawSysNeQueryRsp::XmsgImMgrRawSysNeQueryRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sys_2dx_2dmsg_2dim_2dmgr_2eproto::InitDefaultsXmsgImMgrRawSysNeQueryRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImMgrRawSysNeQueryRsp)
}
XmsgImMgrRawSysNeQueryRsp::XmsgImMgrRawSysNeQueryRsp(const XmsgImMgrRawSysNeQueryRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ne_.MergeFrom(from.ne_);
  // @@protoc_insertion_point(copy_constructor:XmsgImMgrRawSysNeQueryRsp)
}

void XmsgImMgrRawSysNeQueryRsp::SharedCtor() {
  _cached_size_ = 0;
}

XmsgImMgrRawSysNeQueryRsp::~XmsgImMgrRawSysNeQueryRsp() {
  // @@protoc_insertion_point(destructor:XmsgImMgrRawSysNeQueryRsp)
  SharedDtor();
}

void XmsgImMgrRawSysNeQueryRsp::SharedDtor() {
}

void XmsgImMgrRawSysNeQueryRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImMgrRawSysNeQueryRsp::descriptor() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dmgr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dmgr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImMgrRawSysNeQueryRsp& XmsgImMgrRawSysNeQueryRsp::default_instance() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dmgr_2eproto::InitDefaultsXmsgImMgrRawSysNeQueryRsp();
  return *internal_default_instance();
}

XmsgImMgrRawSysNeQueryRsp* XmsgImMgrRawSysNeQueryRsp::New(::google::protobuf::Arena* arena) const {
  XmsgImMgrRawSysNeQueryRsp* n = new XmsgImMgrRawSysNeQueryRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImMgrRawSysNeQueryRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImMgrRawSysNeQueryRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ne_.Clear();
  _internal_metadata_.Clear();
}

bool XmsgImMgrRawSysNeQueryRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImMgrRawSysNeQueryRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, string> ne = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          XmsgImMgrRawSysNeQueryRsp_NeEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              XmsgImMgrRawSysNeQueryRsp_NeEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&ne_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImMgrRawSysNeQueryRsp.NeEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImMgrRawSysNeQueryRsp.NeEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImMgrRawSysNeQueryRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImMgrRawSysNeQueryRsp)
  return false;
#undef DO_
}

void XmsgImMgrRawSysNeQueryRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImMgrRawSysNeQueryRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> ne = 1;
  if (!this->ne().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImMgrRawSysNeQueryRsp.NeEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImMgrRawSysNeQueryRsp.NeEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->ne().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ne().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ne().begin();
          it != this->ne().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImMgrRawSysNeQueryRsp_NeEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ne_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImMgrRawSysNeQueryRsp_NeEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ne().begin();
          it != this->ne().end(); ++it) {
        entry.reset(ne_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImMgrRawSysNeQueryRsp)
}

::google::protobuf::uint8* XmsgImMgrRawSysNeQueryRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImMgrRawSysNeQueryRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> ne = 1;
  if (!this->ne().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImMgrRawSysNeQueryRsp.NeEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImMgrRawSysNeQueryRsp.NeEntry.value");
      }
    };

    if (deterministic &&
        this->ne().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ne().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ne().begin();
          it != this->ne().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImMgrRawSysNeQueryRsp_NeEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ne_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImMgrRawSysNeQueryRsp_NeEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ne().begin();
          it != this->ne().end(); ++it) {
        entry.reset(ne_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImMgrRawSysNeQueryRsp)
  return target;
}

size_t XmsgImMgrRawSysNeQueryRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImMgrRawSysNeQueryRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> ne = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->ne_size());
  {
    ::google::protobuf::scoped_ptr<XmsgImMgrRawSysNeQueryRsp_NeEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->ne().begin();
        it != this->ne().end(); ++it) {
      entry.reset(ne_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImMgrRawSysNeQueryRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImMgrRawSysNeQueryRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImMgrRawSysNeQueryRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImMgrRawSysNeQueryRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImMgrRawSysNeQueryRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImMgrRawSysNeQueryRsp)
    MergeFrom(*source);
  }
}

void XmsgImMgrRawSysNeQueryRsp::MergeFrom(const XmsgImMgrRawSysNeQueryRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImMgrRawSysNeQueryRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ne_.MergeFrom(from.ne_);
}

void XmsgImMgrRawSysNeQueryRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImMgrRawSysNeQueryRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImMgrRawSysNeQueryRsp::CopyFrom(const XmsgImMgrRawSysNeQueryRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImMgrRawSysNeQueryRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImMgrRawSysNeQueryRsp::IsInitialized() const {
  return true;
}

void XmsgImMgrRawSysNeQueryRsp::Swap(XmsgImMgrRawSysNeQueryRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImMgrRawSysNeQueryRsp::InternalSwap(XmsgImMgrRawSysNeQueryRsp* other) {
  using std::swap;
  ne_.Swap(&other->ne_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImMgrRawSysNeQueryRsp::GetMetadata() const {
  protobuf_sys_2dx_2dmsg_2dim_2dmgr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dmgr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void XmsgImMgrRawSysNeStatusQueryReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImMgrRawSysNeStatusQueryReq::kCgtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImMgrRawSysNeStatusQueryReq::XmsgImMgrRawSysNeStatusQueryReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sys_2dx_2dmsg_2dim_2dmgr_2eproto::InitDefaultsXmsgImMgrRawSysNeStatusQueryReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImMgrRawSysNeStatusQueryReq)
}
XmsgImMgrRawSysNeStatusQueryReq::XmsgImMgrRawSysNeStatusQueryReq(const XmsgImMgrRawSysNeStatusQueryReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      cgt_(from.cgt_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:XmsgImMgrRawSysNeStatusQueryReq)
}

void XmsgImMgrRawSysNeStatusQueryReq::SharedCtor() {
  _cached_size_ = 0;
}

XmsgImMgrRawSysNeStatusQueryReq::~XmsgImMgrRawSysNeStatusQueryReq() {
  // @@protoc_insertion_point(destructor:XmsgImMgrRawSysNeStatusQueryReq)
  SharedDtor();
}

void XmsgImMgrRawSysNeStatusQueryReq::SharedDtor() {
}

void XmsgImMgrRawSysNeStatusQueryReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImMgrRawSysNeStatusQueryReq::descriptor() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dmgr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dmgr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImMgrRawSysNeStatusQueryReq& XmsgImMgrRawSysNeStatusQueryReq::default_instance() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dmgr_2eproto::InitDefaultsXmsgImMgrRawSysNeStatusQueryReq();
  return *internal_default_instance();
}

XmsgImMgrRawSysNeStatusQueryReq* XmsgImMgrRawSysNeStatusQueryReq::New(::google::protobuf::Arena* arena) const {
  XmsgImMgrRawSysNeStatusQueryReq* n = new XmsgImMgrRawSysNeStatusQueryReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImMgrRawSysNeStatusQueryReq::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImMgrRawSysNeStatusQueryReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cgt_.Clear();
  _internal_metadata_.Clear();
}

bool XmsgImMgrRawSysNeStatusQueryReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImMgrRawSysNeStatusQueryReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string cgt = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_cgt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cgt(this->cgt_size() - 1).data(),
            static_cast<int>(this->cgt(this->cgt_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImMgrRawSysNeStatusQueryReq.cgt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImMgrRawSysNeStatusQueryReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImMgrRawSysNeStatusQueryReq)
  return false;
#undef DO_
}

void XmsgImMgrRawSysNeStatusQueryReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImMgrRawSysNeStatusQueryReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string cgt = 1;
  for (int i = 0, n = this->cgt_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt(i).data(), static_cast<int>(this->cgt(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImMgrRawSysNeStatusQueryReq.cgt");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->cgt(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImMgrRawSysNeStatusQueryReq)
}

::google::protobuf::uint8* XmsgImMgrRawSysNeStatusQueryReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImMgrRawSysNeStatusQueryReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string cgt = 1;
  for (int i = 0, n = this->cgt_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgt(i).data(), static_cast<int>(this->cgt(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "XmsgImMgrRawSysNeStatusQueryReq.cgt");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->cgt(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImMgrRawSysNeStatusQueryReq)
  return target;
}

size_t XmsgImMgrRawSysNeStatusQueryReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImMgrRawSysNeStatusQueryReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string cgt = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->cgt_size());
  for (int i = 0, n = this->cgt_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->cgt(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImMgrRawSysNeStatusQueryReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImMgrRawSysNeStatusQueryReq)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImMgrRawSysNeStatusQueryReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImMgrRawSysNeStatusQueryReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImMgrRawSysNeStatusQueryReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImMgrRawSysNeStatusQueryReq)
    MergeFrom(*source);
  }
}

void XmsgImMgrRawSysNeStatusQueryReq::MergeFrom(const XmsgImMgrRawSysNeStatusQueryReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImMgrRawSysNeStatusQueryReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cgt_.MergeFrom(from.cgt_);
}

void XmsgImMgrRawSysNeStatusQueryReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImMgrRawSysNeStatusQueryReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImMgrRawSysNeStatusQueryReq::CopyFrom(const XmsgImMgrRawSysNeStatusQueryReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImMgrRawSysNeStatusQueryReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImMgrRawSysNeStatusQueryReq::IsInitialized() const {
  return true;
}

void XmsgImMgrRawSysNeStatusQueryReq::Swap(XmsgImMgrRawSysNeStatusQueryReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImMgrRawSysNeStatusQueryReq::InternalSwap(XmsgImMgrRawSysNeStatusQueryReq* other) {
  using std::swap;
  cgt_.InternalSwap(&other->cgt_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImMgrRawSysNeStatusQueryReq::GetMetadata() const {
  protobuf_sys_2dx_2dmsg_2dim_2dmgr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dmgr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

XmsgImMgrRawSysNeStatusQueryRsp_NeEntry_DoNotUse::XmsgImMgrRawSysNeStatusQueryRsp_NeEntry_DoNotUse() {}
XmsgImMgrRawSysNeStatusQueryRsp_NeEntry_DoNotUse::XmsgImMgrRawSysNeStatusQueryRsp_NeEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void XmsgImMgrRawSysNeStatusQueryRsp_NeEntry_DoNotUse::MergeFrom(const XmsgImMgrRawSysNeStatusQueryRsp_NeEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata XmsgImMgrRawSysNeStatusQueryRsp_NeEntry_DoNotUse::GetMetadata() const {
  ::protobuf_sys_2dx_2dmsg_2dim_2dmgr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dmgr_2eproto::file_level_metadata[7];
}
void XmsgImMgrRawSysNeStatusQueryRsp_NeEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void XmsgImMgrRawSysNeStatusQueryRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int XmsgImMgrRawSysNeStatusQueryRsp::kNeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

XmsgImMgrRawSysNeStatusQueryRsp::XmsgImMgrRawSysNeStatusQueryRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sys_2dx_2dmsg_2dim_2dmgr_2eproto::InitDefaultsXmsgImMgrRawSysNeStatusQueryRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:XmsgImMgrRawSysNeStatusQueryRsp)
}
XmsgImMgrRawSysNeStatusQueryRsp::XmsgImMgrRawSysNeStatusQueryRsp(const XmsgImMgrRawSysNeStatusQueryRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ne_.MergeFrom(from.ne_);
  // @@protoc_insertion_point(copy_constructor:XmsgImMgrRawSysNeStatusQueryRsp)
}

void XmsgImMgrRawSysNeStatusQueryRsp::SharedCtor() {
  _cached_size_ = 0;
}

XmsgImMgrRawSysNeStatusQueryRsp::~XmsgImMgrRawSysNeStatusQueryRsp() {
  // @@protoc_insertion_point(destructor:XmsgImMgrRawSysNeStatusQueryRsp)
  SharedDtor();
}

void XmsgImMgrRawSysNeStatusQueryRsp::SharedDtor() {
}

void XmsgImMgrRawSysNeStatusQueryRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* XmsgImMgrRawSysNeStatusQueryRsp::descriptor() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dmgr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dmgr_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const XmsgImMgrRawSysNeStatusQueryRsp& XmsgImMgrRawSysNeStatusQueryRsp::default_instance() {
  ::protobuf_sys_2dx_2dmsg_2dim_2dmgr_2eproto::InitDefaultsXmsgImMgrRawSysNeStatusQueryRsp();
  return *internal_default_instance();
}

XmsgImMgrRawSysNeStatusQueryRsp* XmsgImMgrRawSysNeStatusQueryRsp::New(::google::protobuf::Arena* arena) const {
  XmsgImMgrRawSysNeStatusQueryRsp* n = new XmsgImMgrRawSysNeStatusQueryRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void XmsgImMgrRawSysNeStatusQueryRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:XmsgImMgrRawSysNeStatusQueryRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ne_.Clear();
  _internal_metadata_.Clear();
}

bool XmsgImMgrRawSysNeStatusQueryRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:XmsgImMgrRawSysNeStatusQueryRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, string> ne = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          XmsgImMgrRawSysNeStatusQueryRsp_NeEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              XmsgImMgrRawSysNeStatusQueryRsp_NeEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&ne_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImMgrRawSysNeStatusQueryRsp.NeEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "XmsgImMgrRawSysNeStatusQueryRsp.NeEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:XmsgImMgrRawSysNeStatusQueryRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:XmsgImMgrRawSysNeStatusQueryRsp)
  return false;
#undef DO_
}

void XmsgImMgrRawSysNeStatusQueryRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:XmsgImMgrRawSysNeStatusQueryRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> ne = 1;
  if (!this->ne().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImMgrRawSysNeStatusQueryRsp.NeEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImMgrRawSysNeStatusQueryRsp.NeEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->ne().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ne().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ne().begin();
          it != this->ne().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImMgrRawSysNeStatusQueryRsp_NeEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ne_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImMgrRawSysNeStatusQueryRsp_NeEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ne().begin();
          it != this->ne().end(); ++it) {
        entry.reset(ne_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:XmsgImMgrRawSysNeStatusQueryRsp)
}

::google::protobuf::uint8* XmsgImMgrRawSysNeStatusQueryRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:XmsgImMgrRawSysNeStatusQueryRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> ne = 1;
  if (!this->ne().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImMgrRawSysNeStatusQueryRsp.NeEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "XmsgImMgrRawSysNeStatusQueryRsp.NeEntry.value");
      }
    };

    if (deterministic &&
        this->ne().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ne().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ne().begin();
          it != this->ne().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<XmsgImMgrRawSysNeStatusQueryRsp_NeEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ne_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<XmsgImMgrRawSysNeStatusQueryRsp_NeEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->ne().begin();
          it != this->ne().end(); ++it) {
        entry.reset(ne_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:XmsgImMgrRawSysNeStatusQueryRsp)
  return target;
}

size_t XmsgImMgrRawSysNeStatusQueryRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:XmsgImMgrRawSysNeStatusQueryRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> ne = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->ne_size());
  {
    ::google::protobuf::scoped_ptr<XmsgImMgrRawSysNeStatusQueryRsp_NeEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->ne().begin();
        it != this->ne().end(); ++it) {
      entry.reset(ne_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void XmsgImMgrRawSysNeStatusQueryRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:XmsgImMgrRawSysNeStatusQueryRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const XmsgImMgrRawSysNeStatusQueryRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const XmsgImMgrRawSysNeStatusQueryRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:XmsgImMgrRawSysNeStatusQueryRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:XmsgImMgrRawSysNeStatusQueryRsp)
    MergeFrom(*source);
  }
}

void XmsgImMgrRawSysNeStatusQueryRsp::MergeFrom(const XmsgImMgrRawSysNeStatusQueryRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:XmsgImMgrRawSysNeStatusQueryRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ne_.MergeFrom(from.ne_);
}

void XmsgImMgrRawSysNeStatusQueryRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:XmsgImMgrRawSysNeStatusQueryRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void XmsgImMgrRawSysNeStatusQueryRsp::CopyFrom(const XmsgImMgrRawSysNeStatusQueryRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:XmsgImMgrRawSysNeStatusQueryRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool XmsgImMgrRawSysNeStatusQueryRsp::IsInitialized() const {
  return true;
}

void XmsgImMgrRawSysNeStatusQueryRsp::Swap(XmsgImMgrRawSysNeStatusQueryRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void XmsgImMgrRawSysNeStatusQueryRsp::InternalSwap(XmsgImMgrRawSysNeStatusQueryRsp* other) {
  using std::swap;
  ne_.Swap(&other->ne_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata XmsgImMgrRawSysNeStatusQueryRsp::GetMetadata() const {
  protobuf_sys_2dx_2dmsg_2dim_2dmgr_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sys_2dx_2dmsg_2dim_2dmgr_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
